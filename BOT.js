const { Bot, InlineKeyboard } = require('grammy');
require('dotenv').config();

const bot = new Bot(process.env.BOT_TOKEN);

bot.command('start', async (ctx) => {
    const keyboard = new InlineKeyboard()
        .text('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ', 'hello')
        .text('–ü–æ–º–æ—â—å', 'help')
        .row()
        .text('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'info')
        .text('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'settings');

    await ctx.reply(
        'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
        { reply_markup: keyboard }
    );
});

bot.on('callback_query:data', async (ctx) => {
    const action = ctx.callbackQuery.data;
    
    switch (action) {
        case 'hello':
            await ctx.reply('–ü—Ä–∏–≤–µ—Ç, ' + ctx.from.first_name + '! üòä');
            break;
            
        case 'help':
            await ctx.reply('‚ÑπÔ∏è –≠—Ç–æ –±–æ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è!');
            break;
            
        case 'info':
            const infoKeyboard = new InlineKeyboard()
                .text('–ê–≤—Ç–æ—Ä', 'author')
                .text('–í–µ—Ä—Å–∏—è', 'version');
                
            await ctx.reply('–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', { reply_markup: infoKeyboard });
            break;
            
        case 'settings':
            await ctx.reply('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã');
            break;
            
        case 'author':
            await ctx.reply('–ê–≤—Ç–æ—Ä: –í–∞—à–µ –ò–º—è\nGitHub: github.com/–≤–∞—à-–ª–æ–≥–∏–Ω');
            break;
            
        case 'version':
            await ctx.reply('–í–µ—Ä—Å–∏—è –±–æ—Ç–∞: 1.0.0');
            break;
            
        default:
            await ctx.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞');
    }
    
    await ctx.answerCallbackQuery();
});

bot.on('message', async (ctx) => {
    await ctx.reply('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã');
});

bot.start();
console.log('–ë–æ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∑–∞–ø—É—â–µ–Ω!');